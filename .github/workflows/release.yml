name: Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0

jobs:
  test:
    name: Test before release
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy scipy matplotlib pytest pytest-cov

    - name: Run tests
      run: |
        python -c "
        import sys; sys.path.insert(0, '.')
        import numpy as np
        import warnings
        from apdist import AmplitudePhaseDistance
        t = np.linspace(0, 1, 51)
        f1 = np.sin(2 * np.pi * t)
        f2 = np.sin(2 * np.pi * t + np.pi/4)
        with warnings.catch_warnings():
            warnings.simplefilter('ignore')
            da, dp = AmplitudePhaseDistance(t, f1, f2)
        print(f'Release test passed: da={da:.4f}, dp={dp:.4f}')
        assert da >= 0 and dp >= 0
        "

  build:
    name: Build distribution
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Check package
      run: twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release v${{ steps.version.outputs.VERSION }}
        body: |
          ## Changes in v${{ steps.version.outputs.VERSION }}
          
          Please see the [CHANGELOG](CHANGELOG.md) for detailed changes.
          
          ## Installation
          
          ```bash
          pip install git+https://github.com/kiranvad/Amplitude-Phase-Distance.git@v${{ steps.version.outputs.VERSION }}
          ```
          
          ## Testing
          
          ```bash
          cd testing
          python test_basic_functionality.py
          ```
        files: |
          dist/*
        draft: false
        prerelease: false

  # Optional: Publish to PyPI (uncomment if you want to publish to PyPI)
  # publish-pypi:
  #   name: Publish to PyPI
  #   runs-on: ubuntu-latest
  #   needs: build
  #   environment: release
  #   permissions:
  #     id-token: write
  #
  #   steps:
  #   - name: Download build artifacts
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: dist
  #       path: dist/
  #
  #   - name: Publish to PyPI
  #     uses: pypa/gh-action-pypi-publish@release/v1
